name: Python config generator dev

on:
  push:
    branches:
      - 'dev'

  # Workflow needs to be started manually from main branch
  workflow_dispatch:
    inputs:
      runtime_env:
        description: 'Config generator runtime env:'
        required: true
        default: 'Github-Workflow'
        type: choice
        options:
          - Github-Workflow
          - Azure-Function
          - GC-Function
      site_id:
        description: 'Site name:'
        required: true
        type: string
        default: 'None'

env:
  AZ_FUNC_ARTIFACT: 'fa-py-code-artifact'
  AZ_FUNC_APP: 'func-app-v2-dev' # set this to your function app name
  AZ_FUNC_APP_PROJECT_PATH: 'source'
  AZ_RG: 'RG-TF-DEV-FUNC'

jobs:
  # Below job was added after the function app was created
  azure_cfg_gen:
    name: '[Azure]Generate SDWAN initial config'
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.runtime_env == 'Azure-Function' && github.event.inputs.site_id != '' }}
    runs-on: self-hosted
    # runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v5

      - name: 'Python: SD-WAN config generator'
        run: |
          curl 'https://func-app-v2-dev.azurewebsites.net/api/cfg?site_id=${{ github.event.inputs.site_id }}'


  python_code:
    name: 'Generate SDWAN initial config'
    if: ${{ github.event_name != 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.runtime_env == 'Github-Workflow') }}
    runs-on: self-hosted
    # runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v5

      - name: 'Python: Install'
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'x64'

      - name: 'Python: Install dependencies'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r source/requirements.txt
          # python -m pip install --target='./.python_packages/lib/site-packages' -r source/requirements.txt

      - name: 'Python: SD-WAN config generator'
        if: ${{ github.event.inputs.runtime_env == 'Github-Workflow' && github.event.inputs.site_id != 'None' && github.event.inputs.site_id != '' }}
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          EMAIL_SENDER_PASSWORD: ${{ secrets.EMAIL_SENDER_PASSWORD }}
          EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
          MANAGER_URL: ${{ secrets.MANAGER_URL }}
          MANAGER_LOGIN: ${{ secrets.MANAGER_LOGIN }}
          MANAGER_PASS: ${{ secrets.MANAGER_PASS }}
        run: |
          python source/app_cfg_gen.py ${{ github.event.inputs.site_id }}

      - name: 'Upload artifact'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.AZ_FUNC_ARTIFACT }}
          path: ${{ env.AZ_FUNC_APP_PROJECT_PATH }}


  function_deploy:
    name: 'Azure Function App Deploy'
    if: ${{ github.event_name != 'workflow_dispatch' }}
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    needs: python_code
    environment: development
    permissions:
      id-token: write # Required for OIDC
      contents: read # Required for actions/checkout
    steps:
      - name: 'Download artifact'
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.AZ_FUNC_ARTIFACT }}

      - name: 'Display structure of downloaded files'
        run: ls -la

      - name: 'Azure CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUB_ID }}

      # Key Vault access is done via Managed Identity
      - name: 'Azure Function App config'
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az functionapp config appsettings set -g ${{ env.AZ_RG }} -n ${{ env.AZ_FUNC_APP }} --settings \
              SMTP_SERVER="${{ secrets.SMTP_SERVER }}" \
              EMAIL_SENDER="${{ secrets.EMAIL_SENDER }}" \
              EMAIL_SENDER_PASSWORD="${{ secrets.EMAIL_SENDER_PASSWORD }}" \
              EMAIL_RECEIVER="${{ secrets.EMAIL_RECEIVER }}" \
              MANAGER_URL="${{ secrets.MANAGER_URL }}" \
              MANAGER_LOGIN="${{ secrets.MANAGER_LOGIN }}" \
              MANAGER_PASS="${{ secrets.MANAGER_PASS }}" \
              KEY_VAULT_URL="${{ secrets.KEY_VAULT_URL }}" \
              MI_CLIENT_ID="${{ secrets.MI_CLIENT_ID }}"

      # Flex Consumption plan, remote-build: true is a MUST!
      - name: 'Azure Function App deployment'
        uses: azure/functions-action@v1
        id: deploy-to-function-app
        with:
          app-name: ${{ env.AZ_FUNC_APP }}
          # Do not use below options for Flex Consumption plan
          # scm-do-build-during-deployment: true
          # enable-oryx-build: true
          remote-build: true
